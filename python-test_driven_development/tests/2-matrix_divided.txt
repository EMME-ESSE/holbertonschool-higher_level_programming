The ''2-matrix_divided.py'' module
======================

Using ''matrix_divided''
-------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[2, 4], [4, 8]]

>>> not_int_matrix = [[2, "Hello"], ["World", 4]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix_divided([[1, None, 3], [4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 3], [4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1], 9, [4, 5, 6]], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'